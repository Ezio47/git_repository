//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagerSystemClassLibrary.OAService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OAService.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool isExists(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isExists", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> isExistsAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficeNum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int[] GetOfficeNum(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficeNum", ReplyAction="*")]
        System.Threading.Tasks.Task<int[]> GetOfficeNumAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FindDeptInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string[] FindDeptInfo(string deptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FindDeptInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<string[]> FindDeptInfoAsync(string deptId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDeptOption", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetDeptOption();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDeptOption", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetDeptOptionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OpenUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool OpenUsers(string jsonUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OpenUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> OpenUsersAsync(string jsonUsers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseUsers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CloseUsers(string userIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CloseUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CloseUsersAsync(string userIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DelUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DelUser(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DelUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DelUserAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitPwd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool InitPwd(string userId, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InitPwd", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> InitPwdAsync(string userId, string pwd);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : ManagerSystemClassLibrary.OAService.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<ManagerSystemClassLibrary.OAService.WebServiceSoap>, ManagerSystemClassLibrary.OAService.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isExists(string userId) {
            return base.Channel.isExists(userId);
        }
        
        public System.Threading.Tasks.Task<bool> isExistsAsync(string userId) {
            return base.Channel.isExistsAsync(userId);
        }
        
        public int[] GetOfficeNum(string userId) {
            return base.Channel.GetOfficeNum(userId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetOfficeNumAsync(string userId) {
            return base.Channel.GetOfficeNumAsync(userId);
        }
        
        public string[] FindDeptInfo(string deptId) {
            return base.Channel.FindDeptInfo(deptId);
        }
        
        public System.Threading.Tasks.Task<string[]> FindDeptInfoAsync(string deptId) {
            return base.Channel.FindDeptInfoAsync(deptId);
        }
        
        public string GetDeptOption() {
            return base.Channel.GetDeptOption();
        }
        
        public System.Threading.Tasks.Task<string> GetDeptOptionAsync() {
            return base.Channel.GetDeptOptionAsync();
        }
        
        public bool OpenUsers(string jsonUsers) {
            return base.Channel.OpenUsers(jsonUsers);
        }
        
        public System.Threading.Tasks.Task<bool> OpenUsersAsync(string jsonUsers) {
            return base.Channel.OpenUsersAsync(jsonUsers);
        }
        
        public bool CloseUsers(string userIdList) {
            return base.Channel.CloseUsers(userIdList);
        }
        
        public System.Threading.Tasks.Task<bool> CloseUsersAsync(string userIdList) {
            return base.Channel.CloseUsersAsync(userIdList);
        }
        
        public bool DelUser(string userId) {
            return base.Channel.DelUser(userId);
        }
        
        public System.Threading.Tasks.Task<bool> DelUserAsync(string userId) {
            return base.Channel.DelUserAsync(userId);
        }
        
        public bool InitPwd(string userId, string pwd) {
            return base.Channel.InitPwd(userId, pwd);
        }
        
        public System.Threading.Tasks.Task<bool> InitPwdAsync(string userId, string pwd) {
            return base.Channel.InitPwdAsync(userId, pwd);
        }
    }
}
