//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagerSystemClassLibrary.SmsSendService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsMessage", Namespace="http://schemas.datacontract.org/2004/07/TLW.Project.SmsMessageWcfService.Model")]
    [System.SerializableAttribute()]
    public partial class SmsMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Msg {
            get {
                return this.MsgField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgField, value) != true)) {
                    this.MsgField = value;
                    this.RaisePropertyChanged("Msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmsSendService.ISmsSendService")]
    public interface ISmsSendService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/SendMsg", ReplyAction="http://tempuri.org/ISmsSendService/SendMsgResponse")]
        ManagerSystemClassLibrary.SmsSendService.SmsMessage SendMsg(string content, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/SendMsg", ReplyAction="http://tempuri.org/ISmsSendService/SendMsgResponse")]
        System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> SendMsgAsync(string content, string mobile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/SmsTemplateModify", ReplyAction="http://tempuri.org/ISmsSendService/SmsTemplateModifyResponse")]
        ManagerSystemClassLibrary.SmsSendService.SmsMessage SmsTemplateModify(string content, string tid, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/SmsTemplateModify", ReplyAction="http://tempuri.org/ISmsSendService/SmsTemplateModifyResponse")]
        System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> SmsTemplateModifyAsync(string content, string tid, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetSign", ReplyAction="http://tempuri.org/ISmsSendService/GetSignResponse")]
        string GetSign(string SignName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetSign", ReplyAction="http://tempuri.org/ISmsSendService/GetSignResponse")]
        System.Threading.Tasks.Task<string> GetSignAsync(string SignName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetSmsTotal", ReplyAction="http://tempuri.org/ISmsSendService/GetSmsTotalResponse")]
        ManagerSystemClassLibrary.SmsSendService.SmsMessage GetSmsTotal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetSmsTotal", ReplyAction="http://tempuri.org/ISmsSendService/GetSmsTotalResponse")]
        System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> GetSmsTotalAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetMsgTest", ReplyAction="http://tempuri.org/ISmsSendService/GetMsgTestResponse")]
        ManagerSystemClassLibrary.SmsSendService.SmsMessage GetMsgTest(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetMsgTest", ReplyAction="http://tempuri.org/ISmsSendService/GetMsgTestResponse")]
        System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> GetMsgTestAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetStrTest", ReplyAction="http://tempuri.org/ISmsSendService/GetStrTestResponse")]
        string GetStrTest(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmsSendService/GetStrTest", ReplyAction="http://tempuri.org/ISmsSendService/GetStrTestResponse")]
        System.Threading.Tasks.Task<string> GetStrTestAsync(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmsSendServiceChannel : ManagerSystemClassLibrary.SmsSendService.ISmsSendService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmsSendServiceClient : System.ServiceModel.ClientBase<ManagerSystemClassLibrary.SmsSendService.ISmsSendService>, ManagerSystemClassLibrary.SmsSendService.ISmsSendService {
        
        public SmsSendServiceClient() {
        }
        
        public SmsSendServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmsSendServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsSendServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmsSendServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagerSystemClassLibrary.SmsSendService.SmsMessage SendMsg(string content, string mobile) {
            return base.Channel.SendMsg(content, mobile);
        }
        
        public System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> SendMsgAsync(string content, string mobile) {
            return base.Channel.SendMsgAsync(content, mobile);
        }
        
        public ManagerSystemClassLibrary.SmsSendService.SmsMessage SmsTemplateModify(string content, string tid, string type) {
            return base.Channel.SmsTemplateModify(content, tid, type);
        }
        
        public System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> SmsTemplateModifyAsync(string content, string tid, string type) {
            return base.Channel.SmsTemplateModifyAsync(content, tid, type);
        }
        
        public string GetSign(string SignName) {
            return base.Channel.GetSign(SignName);
        }
        
        public System.Threading.Tasks.Task<string> GetSignAsync(string SignName) {
            return base.Channel.GetSignAsync(SignName);
        }
        
        public ManagerSystemClassLibrary.SmsSendService.SmsMessage GetSmsTotal() {
            return base.Channel.GetSmsTotal();
        }
        
        public System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> GetSmsTotalAsync() {
            return base.Channel.GetSmsTotalAsync();
        }
        
        public ManagerSystemClassLibrary.SmsSendService.SmsMessage GetMsgTest(string text) {
            return base.Channel.GetMsgTest(text);
        }
        
        public System.Threading.Tasks.Task<ManagerSystemClassLibrary.SmsSendService.SmsMessage> GetMsgTestAsync(string text) {
            return base.Channel.GetMsgTestAsync(text);
        }
        
        public string GetStrTest(string text) {
            return base.Channel.GetStrTest(text);
        }
        
        public System.Threading.Tasks.Task<string> GetStrTestAsync(string text) {
            return base.Channel.GetStrTestAsync(text);
        }
    }
}
