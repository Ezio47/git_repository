//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ManagerSystem.MVC.SpringerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataInfoModel", Namespace="http://schemas.datacontract.org/2004/07/Springer.EntityModel.Entity")]
    [System.SerializableAttribute()]
    public partial class DataInfoModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cjtimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal dirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal heightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal latField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal lonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cjtime {
            get {
                return this.cjtimeField;
            }
            set {
                if ((object.ReferenceEquals(this.cjtimeField, value) != true)) {
                    this.cjtimeField = value;
                    this.RaisePropertyChanged("cjtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal dir {
            get {
                return this.dirField;
            }
            set {
                if ((this.dirField.Equals(value) != true)) {
                    this.dirField = value;
                    this.RaisePropertyChanged("dir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal height {
            get {
                return this.heightField;
            }
            set {
                if ((this.heightField.Equals(value) != true)) {
                    this.heightField = value;
                    this.RaisePropertyChanged("height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal lat {
            get {
                return this.latField;
            }
            set {
                if ((this.latField.Equals(value) != true)) {
                    this.latField = value;
                    this.RaisePropertyChanged("lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal lon {
            get {
                return this.lonField;
            }
            set {
                if ((this.lonField.Equals(value) != true)) {
                    this.lonField = value;
                    this.RaisePropertyChanged("lon");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUploadMessageModel", Namespace="http://schemas.datacontract.org/2004/07/Springer.EntityModel.Entity")]
    [System.SerializableAttribute()]
    public partial class FileUploadMessageModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileDescripeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileDescripe {
            get {
                return this.FileDescripeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDescripeField, value) != true)) {
                    this.FileDescripeField = value;
                    this.RaisePropertyChanged("FileDescripe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_SYS_DICTModel", Namespace="http://schemas.datacontract.org/2004/07/Springer.EntityModel")]
    [System.SerializableAttribute()]
    public partial class T_SYS_DICTModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int _dictidField;
        
        private string _dictnameField;
        
        private string _dictvalueField;
        
        private string _dictypeidField;
        
        private string _standby1Field;
        
        private string _sysflagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _dictid {
            get {
                return this._dictidField;
            }
            set {
                if ((this._dictidField.Equals(value) != true)) {
                    this._dictidField = value;
                    this.RaisePropertyChanged("_dictid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _dictname {
            get {
                return this._dictnameField;
            }
            set {
                if ((object.ReferenceEquals(this._dictnameField, value) != true)) {
                    this._dictnameField = value;
                    this.RaisePropertyChanged("_dictname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _dictvalue {
            get {
                return this._dictvalueField;
            }
            set {
                if ((object.ReferenceEquals(this._dictvalueField, value) != true)) {
                    this._dictvalueField = value;
                    this.RaisePropertyChanged("_dictvalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _dictypeid {
            get {
                return this._dictypeidField;
            }
            set {
                if ((object.ReferenceEquals(this._dictypeidField, value) != true)) {
                    this._dictypeidField = value;
                    this.RaisePropertyChanged("_dictypeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _standby1 {
            get {
                return this._standby1Field;
            }
            set {
                if ((object.ReferenceEquals(this._standby1Field, value) != true)) {
                    this._standby1Field = value;
                    this.RaisePropertyChanged("_standby1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _sysflag {
            get {
                return this._sysflagField;
            }
            set {
                if ((object.ReferenceEquals(this._sysflagField, value) != true)) {
                    this._sysflagField = value;
                    this.RaisePropertyChanged("_sysflag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TXLModel", Namespace="http://schemas.datacontract.org/2004/07/Springer.EntityModel.Entity")]
    [System.SerializableAttribute()]
    public partial class TXLModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADID {
            get {
                return this.ADIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ADIDField, value) != true)) {
                    this.ADIDField = value;
                    this.RaisePropertyChanged("ADID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepJob {
            get {
                return this.DepJobField;
            }
            set {
                if ((object.ReferenceEquals(this.DepJobField, value) != true)) {
                    this.DepJobField = value;
                    this.RaisePropertyChanged("DepJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepName {
            get {
                return this.DepNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepNameField, value) != true)) {
                    this.DepNameField = value;
                    this.RaisePropertyChanged("DepName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HLYTXLModel", Namespace="http://schemas.datacontract.org/2004/07/Springer.EntityModel.Entity")]
    [System.SerializableAttribute()]
    public partial class HLYTXLModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ORGNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PHONEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HID {
            get {
                return this.HIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HIDField, value) != true)) {
                    this.HIDField = value;
                    this.RaisePropertyChanged("HID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HNAME {
            get {
                return this.HNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.HNAMEField, value) != true)) {
                    this.HNAMEField = value;
                    this.RaisePropertyChanged("HNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ORGNO {
            get {
                return this.ORGNOField;
            }
            set {
                if ((object.ReferenceEquals(this.ORGNOField, value) != true)) {
                    this.ORGNOField = value;
                    this.RaisePropertyChanged("ORGNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PHONE {
            get {
                return this.PHONEField;
            }
            set {
                if ((object.ReferenceEquals(this.PHONEField, value) != true)) {
                    this.PHONEField = value;
                    this.RaisePropertyChanged("PHONE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Points", Namespace="http://schemas.datacontract.org/2004/07/Springer.EntityModel.Entity")]
    [System.SerializableAttribute()]
    public partial class Points : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JD {
            get {
                return this.JDField;
            }
            set {
                if ((object.ReferenceEquals(this.JDField, value) != true)) {
                    this.JDField = value;
                    this.RaisePropertyChanged("JD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WD {
            get {
                return this.WDField;
            }
            set {
                if ((object.ReferenceEquals(this.WDField, value) != true)) {
                    this.WDField = value;
                    this.RaisePropertyChanged("WD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SpringerServiceReference.IHUserWcfService")]
    public interface IHUserWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/ReturnPhoneStatusWcf", ReplyAction="http://tempuri.org/IHUserWcfService/ReturnPhoneStatusWcfResponse")]
        string ReturnPhoneStatusWcf(string sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/ReturnPhoneStatusWcf", ReplyAction="http://tempuri.org/IHUserWcfService/ReturnPhoneStatusWcfResponse")]
        System.Threading.Tasks.Task<string> ReturnPhoneStatusWcfAsync(string sn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/RegisterHUserWcf", ReplyAction="http://tempuri.org/IHUserWcfService/RegisterHUserWcfResponse")]
        bool RegisterHUserWcf(string sn, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/RegisterHUserWcf", ReplyAction="http://tempuri.org/IHUserWcfService/RegisterHUserWcfResponse")]
        System.Threading.Tasks.Task<bool> RegisterHUserWcfAsync(string sn, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/RegisterHUserWcfStr", ReplyAction="http://tempuri.org/IHUserWcfService/RegisterHUserWcfStrResponse")]
        string RegisterHUserWcfStr(string sn, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/RegisterHUserWcfStr", ReplyAction="http://tempuri.org/IHUserWcfService/RegisterHUserWcfStrResponse")]
        System.Threading.Tasks.Task<string> RegisterHUserWcfStrAsync(string sn, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetDicSysParaments", ReplyAction="http://tempuri.org/IHUserWcfService/GetDicSysParamentsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDicSysParaments(string sysflag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetDicSysParaments", ReplyAction="http://tempuri.org/IHUserWcfService/GetDicSysParamentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDicSysParamentsAsync(string sysflag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetJsonSysParaments", ReplyAction="http://tempuri.org/IHUserWcfService/GetJsonSysParamentsResponse")]
        string GetJsonSysParaments(string sysflag, string paramflag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetJsonSysParaments", ReplyAction="http://tempuri.org/IHUserWcfService/GetJsonSysParamentsResponse")]
        System.Threading.Tasks.Task<string> GetJsonSysParamentsAsync(string sysflag, string paramflag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddRealData", ReplyAction="http://tempuri.org/IHUserWcfService/AddRealDataResponse")]
        bool AddRealData(string phone, string lon, string lat, string elec, string cjtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddRealData", ReplyAction="http://tempuri.org/IHUserWcfService/AddRealDataResponse")]
        System.Threading.Tasks.Task<bool> AddRealDataAsync(string phone, string lon, string lat, string elec, string cjtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddRealDataTest", ReplyAction="http://tempuri.org/IHUserWcfService/AddRealDataTestResponse")]
        bool AddRealDataTest(string phone, string lon, string lat, string elec, string cjtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddRealDataTest", ReplyAction="http://tempuri.org/IHUserWcfService/AddRealDataTestResponse")]
        System.Threading.Tasks.Task<bool> AddRealDataTestAsync(string phone, string lon, string lat, string elec, string cjtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddAlarmInfo", ReplyAction="http://tempuri.org/IHUserWcfService/AddAlarmInfoResponse")]
        bool AddAlarmInfo(string lon, string lat, string height, string phone, string alarmtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddAlarmInfo", ReplyAction="http://tempuri.org/IHUserWcfService/AddAlarmInfoResponse")]
        System.Threading.Tasks.Task<bool> AddAlarmInfoAsync(string lon, string lat, string height, string phone, string alarmtime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddReportData", ReplyAction="http://tempuri.org/IHUserWcfService/AddReportDataResponse")]
        bool AddReportData(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddReportData", ReplyAction="http://tempuri.org/IHUserWcfService/AddReportDataResponse")]
        System.Threading.Tasks.Task<bool> AddReportDataAsync(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddReportDataStr", ReplyAction="http://tempuri.org/IHUserWcfService/AddReportDataStrResponse")]
        bool AddReportDataStr(string infotype, string reportdescribe, string phone, string lon, string lat, string cjtime, string base64str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddReportDataStr", ReplyAction="http://tempuri.org/IHUserWcfService/AddReportDataStrResponse")]
        System.Threading.Tasks.Task<bool> AddReportDataStrAsync(string infotype, string reportdescribe, string phone, string lon, string lat, string cjtime, string base64str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddCollectData", ReplyAction="http://tempuri.org/IHUserWcfService/AddCollectDataResponse")]
        bool AddCollectData(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddCollectData", ReplyAction="http://tempuri.org/IHUserWcfService/AddCollectDataResponse")]
        System.Threading.Tasks.Task<bool> AddCollectDataAsync(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddCollectDataStr", ReplyAction="http://tempuri.org/IHUserWcfService/AddCollectDataStrResponse")]
        bool AddCollectDataStr(string datalistJsonstr, string infotype, string describe, string cjtime, string phone, string base64str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/AddCollectDataStr", ReplyAction="http://tempuri.org/IHUserWcfService/AddCollectDataStrResponse")]
        System.Threading.Tasks.Task<bool> AddCollectDataStrAsync(string datalistJsonstr, string infotype, string describe, string cjtime, string phone, string base64str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetModelList", ReplyAction="http://tempuri.org/IHUserWcfService/GetModelListResponse")]
        ManagerSystem.MVC.SpringerServiceReference.T_SYS_DICTModel[] GetModelList(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetModelList", ReplyAction="http://tempuri.org/IHUserWcfService/GetModelListResponse")]
        System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.T_SYS_DICTModel[]> GetModelListAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetModelListDic", ReplyAction="http://tempuri.org/IHUserWcfService/GetModelListDicResponse")]
        System.Collections.Generic.Dictionary<string, string> GetModelListDic(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetModelListDic", ReplyAction="http://tempuri.org/IHUserWcfService/GetModelListDicResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetModelListDicAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetJsonModelListDic", ReplyAction="http://tempuri.org/IHUserWcfService/GetJsonModelListDicResponse")]
        string GetJsonModelListDic(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetJsonModelListDic", ReplyAction="http://tempuri.org/IHUserWcfService/GetJsonModelListDicResponse")]
        System.Threading.Tasks.Task<string> GetJsonModelListDicAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetTxlModelList", ReplyAction="http://tempuri.org/IHUserWcfService/GetTxlModelListResponse")]
        ManagerSystem.MVC.SpringerServiceReference.TXLModel[] GetTxlModelList(string top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetTxlModelList", ReplyAction="http://tempuri.org/IHUserWcfService/GetTxlModelListResponse")]
        System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.TXLModel[]> GetTxlModelListAsync(string top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetHLYTXLModelList", ReplyAction="http://tempuri.org/IHUserWcfService/GetHLYTXLModelListResponse")]
        ManagerSystem.MVC.SpringerServiceReference.HLYTXLModel[] GetHLYTXLModelList(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetHLYTXLModelList", ReplyAction="http://tempuri.org/IHUserWcfService/GetHLYTXLModelListResponse")]
        System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.HLYTXLModel[]> GetHLYTXLModelListAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetAddreass", ReplyAction="http://tempuri.org/IHUserWcfService/GetAddreassResponse")]
        string GetAddreass(decimal lng, decimal lat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHUserWcfService/GetAddreass", ReplyAction="http://tempuri.org/IHUserWcfService/GetAddreassResponse")]
        System.Threading.Tasks.Task<string> GetAddreassAsync(decimal lng, decimal lat);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHUserWcfServiceChannel : ManagerSystem.MVC.SpringerServiceReference.IHUserWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HUserWcfServiceClient : System.ServiceModel.ClientBase<ManagerSystem.MVC.SpringerServiceReference.IHUserWcfService>, ManagerSystem.MVC.SpringerServiceReference.IHUserWcfService {
        
        public HUserWcfServiceClient() {
        }
        
        public HUserWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HUserWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HUserWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HUserWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ReturnPhoneStatusWcf(string sn) {
            return base.Channel.ReturnPhoneStatusWcf(sn);
        }
        
        public System.Threading.Tasks.Task<string> ReturnPhoneStatusWcfAsync(string sn) {
            return base.Channel.ReturnPhoneStatusWcfAsync(sn);
        }
        
        public bool RegisterHUserWcf(string sn, string phone) {
            return base.Channel.RegisterHUserWcf(sn, phone);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterHUserWcfAsync(string sn, string phone) {
            return base.Channel.RegisterHUserWcfAsync(sn, phone);
        }
        
        public string RegisterHUserWcfStr(string sn, string phone) {
            return base.Channel.RegisterHUserWcfStr(sn, phone);
        }
        
        public System.Threading.Tasks.Task<string> RegisterHUserWcfStrAsync(string sn, string phone) {
            return base.Channel.RegisterHUserWcfStrAsync(sn, phone);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDicSysParaments(string sysflag) {
            return base.Channel.GetDicSysParaments(sysflag);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetDicSysParamentsAsync(string sysflag) {
            return base.Channel.GetDicSysParamentsAsync(sysflag);
        }
        
        public string GetJsonSysParaments(string sysflag, string paramflag) {
            return base.Channel.GetJsonSysParaments(sysflag, paramflag);
        }
        
        public System.Threading.Tasks.Task<string> GetJsonSysParamentsAsync(string sysflag, string paramflag) {
            return base.Channel.GetJsonSysParamentsAsync(sysflag, paramflag);
        }
        
        public bool AddRealData(string phone, string lon, string lat, string elec, string cjtime) {
            return base.Channel.AddRealData(phone, lon, lat, elec, cjtime);
        }
        
        public System.Threading.Tasks.Task<bool> AddRealDataAsync(string phone, string lon, string lat, string elec, string cjtime) {
            return base.Channel.AddRealDataAsync(phone, lon, lat, elec, cjtime);
        }
        
        public bool AddRealDataTest(string phone, string lon, string lat, string elec, string cjtime) {
            return base.Channel.AddRealDataTest(phone, lon, lat, elec, cjtime);
        }
        
        public System.Threading.Tasks.Task<bool> AddRealDataTestAsync(string phone, string lon, string lat, string elec, string cjtime) {
            return base.Channel.AddRealDataTestAsync(phone, lon, lat, elec, cjtime);
        }
        
        public bool AddAlarmInfo(string lon, string lat, string height, string phone, string alarmtime) {
            return base.Channel.AddAlarmInfo(lon, lat, height, phone, alarmtime);
        }
        
        public System.Threading.Tasks.Task<bool> AddAlarmInfoAsync(string lon, string lat, string height, string phone, string alarmtime) {
            return base.Channel.AddAlarmInfoAsync(lon, lat, height, phone, alarmtime);
        }
        
        public bool AddReportData(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload) {
            return base.Channel.AddReportData(datalist, infotype, title, phone, fileupload);
        }
        
        public System.Threading.Tasks.Task<bool> AddReportDataAsync(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload) {
            return base.Channel.AddReportDataAsync(datalist, infotype, title, phone, fileupload);
        }
        
        public bool AddReportDataStr(string infotype, string reportdescribe, string phone, string lon, string lat, string cjtime, string base64str) {
            return base.Channel.AddReportDataStr(infotype, reportdescribe, phone, lon, lat, cjtime, base64str);
        }
        
        public System.Threading.Tasks.Task<bool> AddReportDataStrAsync(string infotype, string reportdescribe, string phone, string lon, string lat, string cjtime, string base64str) {
            return base.Channel.AddReportDataStrAsync(infotype, reportdescribe, phone, lon, lat, cjtime, base64str);
        }
        
        public bool AddCollectData(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload) {
            return base.Channel.AddCollectData(datalist, infotype, title, phone, fileupload);
        }
        
        public System.Threading.Tasks.Task<bool> AddCollectDataAsync(ManagerSystem.MVC.SpringerServiceReference.DataInfoModel[] datalist, string infotype, string title, string phone, ManagerSystem.MVC.SpringerServiceReference.FileUploadMessageModel fileupload) {
            return base.Channel.AddCollectDataAsync(datalist, infotype, title, phone, fileupload);
        }
        
        public bool AddCollectDataStr(string datalistJsonstr, string infotype, string describe, string cjtime, string phone, string base64str) {
            return base.Channel.AddCollectDataStr(datalistJsonstr, infotype, describe, cjtime, phone, base64str);
        }
        
        public System.Threading.Tasks.Task<bool> AddCollectDataStrAsync(string datalistJsonstr, string infotype, string describe, string cjtime, string phone, string base64str) {
            return base.Channel.AddCollectDataStrAsync(datalistJsonstr, infotype, describe, cjtime, phone, base64str);
        }
        
        public ManagerSystem.MVC.SpringerServiceReference.T_SYS_DICTModel[] GetModelList(string type) {
            return base.Channel.GetModelList(type);
        }
        
        public System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.T_SYS_DICTModel[]> GetModelListAsync(string type) {
            return base.Channel.GetModelListAsync(type);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetModelListDic(string type) {
            return base.Channel.GetModelListDic(type);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetModelListDicAsync(string type) {
            return base.Channel.GetModelListDicAsync(type);
        }
        
        public string GetJsonModelListDic(string type) {
            return base.Channel.GetJsonModelListDic(type);
        }
        
        public System.Threading.Tasks.Task<string> GetJsonModelListDicAsync(string type) {
            return base.Channel.GetJsonModelListDicAsync(type);
        }
        
        public ManagerSystem.MVC.SpringerServiceReference.TXLModel[] GetTxlModelList(string top) {
            return base.Channel.GetTxlModelList(top);
        }
        
        public System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.TXLModel[]> GetTxlModelListAsync(string top) {
            return base.Channel.GetTxlModelListAsync(top);
        }
        
        public ManagerSystem.MVC.SpringerServiceReference.HLYTXLModel[] GetHLYTXLModelList(string phone) {
            return base.Channel.GetHLYTXLModelList(phone);
        }
        
        public System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.HLYTXLModel[]> GetHLYTXLModelListAsync(string phone) {
            return base.Channel.GetHLYTXLModelListAsync(phone);
        }
        
        public string GetAddreass(decimal lng, decimal lat) {
            return base.Channel.GetAddreass(lng, lat);
        }
        
        public System.Threading.Tasks.Task<string> GetAddreassAsync(decimal lng, decimal lat) {
            return base.Channel.GetAddreassAsync(lng, lat);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SpringerServiceReference.IFireSpreadService")]
    public interface IFireSpreadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFireSpreadService/FireSpread", ReplyAction="http://tempuri.org/IFireSpreadService/FireSpreadResponse")]
        ManagerSystem.MVC.SpringerServiceReference.Points[] FireSpread(string jd, string wd, double dWindDirection, double dWindSpeed, double dHumidity, double dTemperature, double dW, double dTime, bool bConvexHull);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFireSpreadService/FireSpread", ReplyAction="http://tempuri.org/IFireSpreadService/FireSpreadResponse")]
        System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.Points[]> FireSpreadAsync(string jd, string wd, double dWindDirection, double dWindSpeed, double dHumidity, double dTemperature, double dW, double dTime, bool bConvexHull);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFireSpreadServiceChannel : ManagerSystem.MVC.SpringerServiceReference.IFireSpreadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FireSpreadServiceClient : System.ServiceModel.ClientBase<ManagerSystem.MVC.SpringerServiceReference.IFireSpreadService>, ManagerSystem.MVC.SpringerServiceReference.IFireSpreadService {
        
        public FireSpreadServiceClient() {
        }
        
        public FireSpreadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FireSpreadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FireSpreadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FireSpreadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ManagerSystem.MVC.SpringerServiceReference.Points[] FireSpread(string jd, string wd, double dWindDirection, double dWindSpeed, double dHumidity, double dTemperature, double dW, double dTime, bool bConvexHull) {
            return base.Channel.FireSpread(jd, wd, dWindDirection, dWindSpeed, dHumidity, dTemperature, dW, dTime, bConvexHull);
        }
        
        public System.Threading.Tasks.Task<ManagerSystem.MVC.SpringerServiceReference.Points[]> FireSpreadAsync(string jd, string wd, double dWindDirection, double dWindSpeed, double dHumidity, double dTemperature, double dW, double dTime, bool bConvexHull) {
            return base.Channel.FireSpreadAsync(jd, wd, dWindDirection, dWindSpeed, dHumidity, dTemperature, dW, dTime, bConvexHull);
        }
    }
}
